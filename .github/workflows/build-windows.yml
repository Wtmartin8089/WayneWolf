name: Build WayneWolf for Windows

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'WayneWolf/**'
      - '.github/workflows/build-windows.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Free up disk space
        shell: pwsh
        run: |
          Get-PSDrive
          # Remove unnecessary files to free space
          Remove-Item -Path "C:\Program Files\dotnet" -Recurse -Force -ErrorAction SilentlyContinue
          Remove-Item -Path "$env:ANDROID_HOME" -Recurse -Force -ErrorAction SilentlyContinue
          Remove-Item -Path "$env:AGENT_TOOLSDIRECTORY" -Recurse -Force -ErrorAction SilentlyContinue
          Get-PSDrive


      - name: Build WayneWolf for Windows
        shell: pwsh
        run: |
          # Run the Windows build script
          cd packaging/windows
          .\build-windows.ps1 -Version "141.0-1"

      - name: Verify build
        shell: pwsh
        run: |
          $package = Get-ChildItem -Path "dist/windows" -Filter "*.zip" | Select-Object -First 1
          if ($package) {
            Write-Host "âœ“ Build successful: $($package.Name)"
            Write-Host "  Size: $([math]::Round($package.Length / 1MB, 2)) MB"
          } else {
            Write-Error "Build failed - no package found"
            exit 1
          }

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: waynewolf-windows-x64
          path: |
            dist/windows/waynewolf-*.zip
            dist/windows/waynewolf-*.zip.sha256
          retention-days: 30

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/windows/waynewolf-*.zip
            dist/windows/waynewolf-*.zip.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
